{
  "name": "react-navigation",
  "version": "1.0.0-beta.27",
  "description": "React Navigation",
  "main": "src/react-navigation.js",
  "sources": {
    "react-native-v1": "lib-rn/react-navigation.js",
    "web": "lib/react-navigation.web.js"
  },
  "module": "lib/react-navigation.web.js",
  "webpack": "lib/react-navigation.web.js",
  "repository": {
    "url": "git@github.com:react-community/react-navigation.git",
    "type": "git"
  },
  "author": "Adam Miskiewicz <adam@sk3vy.com>",
  "license": "BSD-2-Clause",
  "scripts": {
    "clean": "rm -rf lib/ lib-rn/",
    "build": "npm run build-docs && npm run build-web && npm run build-rn && npm run build-dot-flow",
    "watch-rn": "mkdir -p lib-rn/views/ && cp -R src/views/assets lib/views/assets && BABEL_ENV=publish-rn babel -w src -d lib-rn",
    "watch-web": "mkdir -p lib/views/ &&  cp -R src/views/assets lib/views/assets && BABEL_ENV=publish-web babel -w src -d lib",
    "build-rn": "mkdir -p lib-rn/views/ && cp -R src/views/assets lib-rn/views/assets && BABEL_ENV=publish-rn babel src -d lib-rn --ignore __tests__",
    "build-web": "mkdir -p lib/views/ && cp -R src/views/assets lib/views/assets && BABEL_ENV=publish-web babel src -d lib --ignore __tests__",
    "build-dot-flow": "find ./src -name '*.js' -not -path '*/__tests__*' | while read filepath; do cp $filepath `echo $filepath | sed 's/\\/src\\//\\/lib\\//g'`.flow && cp $filepath `echo $filepath | sed 's/\\/src\\//\\/lib-rn\\//g'`.flow; done",
    "build-docs": "node scripts/compile-docs",
    "start": "npm run run-playground-ios",
    "run-playground-ios": "cd examples/NavigationPlayground && npm run ios",
    "run-playground-android": "cd examples/NavigationPlayground && npm run android",
    "run-redux-android": "cd examples/ReduxExample && react-native run-android",
    "run-redux-ios": "cd examples/ReduxExample && react-native run-ios",
    "test": "npm run lint && npm run flow-check && npm run jest",
    "codecov": "codecov",
    "jest": "jest",
    "lint": "eslint .",
    "format": "eslint --fix .",
    "flow": "flow",
    "flow-check": "flow check --show-all-errors",
    "precommit": "lint-staged",
    "prepublish": "npm run clean && npm run build"
  },
  "files": [
    "lib",
    "lib-rn",
    "src"
  ],
  "peerDependencies": {
    "react": "*",
    "react-native": "*"
  },
  "dependencies": {
    "babel-plugin-transform-define": "^1.3.0",
    "clamp": "^1.0.1",
    "hoist-non-react-statics": "^2.2.0",
    "path-to-regexp": "^1.7.0",
    "prop-types": "^15.5.10",
    "react-native-drawer-layout-polyfill": "^1.3.2",
    "react-native-tab-view": "^0.0.74"
  },
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.25.0",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^20.0.3",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-react-native": "^2.1.0",
    "babel-preset-react-native-stage-0": "^1.0.1",
    "babel-preset-react-native-syntax": "^1.0.0",
    "babel-preset-stage-1": "^6.24.1",
    "codecov": "^2.2.0",
    "eslint": "^4.2.0",
    "eslint-config-prettier": "^2.3.0",
    "eslint-plugin-flowtype": "^2.35.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-prettier": "^2.1.2",
    "eslint-plugin-react": "^7.1.0",
    "flow-bin": "^0.56.0",
    "husky": "^0.14.3",
    "jest": "^20.0.4",
    "lint-staged": "^4.2.1",
    "prettier": "^1.5.3",
    "prettier-eslint": "^6.4.2",
    "react": "16.0.0",
    "react-native": "^0.50.3",
    "react-native-vector-icons": "^4.2.0",
    "react-test-renderer": "^16.0.0"
  },
  "jest": {
    "notify": true,
    "preset": "react-native",
    "testRegex": "./src/.*\\-test\\.js$",
    "setupFiles": [
      "<rootDir>/jest-setup.js"
    ],
    "coverageDirectory": "./coverage/",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "coveragePathIgnorePatterns": [
      "jest-setup.js"
    ],
    "modulePathIgnorePatterns": [
      "examples"
    ]
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  }
}
